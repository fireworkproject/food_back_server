{"version":3,"sources":["views/Foods/List/components/FoodTableRow.js","views/Foods/List/Foods.js"],"names":["FoodTableRow","goDetailPage","data","_this","props","callbackFunction","_this2","this","_this$props$food","food","id","food_group","food_name","size","calorie","carbohydrate","protein","fat","sugars","salt","cholesterol","saturaated_fat","trans_fat","caffeine","year","react_default","a","createElement","onClick","e","Component","defaultProps","Foods","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","foods","foodName","selected","select_id","handleChangeFoodName","searchText","target","value","timeout","clearTimeout","setTimeout","searchFoods","fetch","then","res","json","setState","catch","console","log","getFoodList","selectItem","history","push","page","_this3","list","map","components_FoodTableRow","key","className","type","placeholder","onChange","evt","scope"],"mappings":"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","file":"static/js/10.ffb46865.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass FoodTableRow extends Component{\r\n\r\n    static defaultProps = {\r\n        food: {\r\n            \"food_group\": \"과자류\",\r\n            \"food_name\": \"100% 유기농 허니팝 키즈퐁\",\r\n            \"size\": \"30\",\r\n            \"calorie\": \"33.3\",\r\n            \"carbohydrate\": \"7.4\",\r\n            \"protein\": \"0.63\",\r\n            \"fat\": \"0\",\r\n            \"sugars\": \"4.2\",\r\n            \"salt\": \"0\",\r\n            \"cholesterol\": \"0\",\r\n            \"saturaated_fat\": \"0\",\r\n            \"trans_fat\": \"0\",\r\n            \"caffeine\": \"0\",\r\n            \"year\": \"2017\"\r\n        }\r\n      }\r\n\r\n    goDetailPage = (data) => {\r\n        this.props.callbackFunction(data);\r\n    }\r\n\r\n    render(){\r\n\r\n        const { \r\n            id,\r\n            food_group,\r\n            food_name,\r\n            size,\r\n            calorie,\r\n            carbohydrate,\r\n            protein,\r\n            fat,\r\n            sugars,\r\n            salt,\r\n            cholesterol,\r\n            saturaated_fat,\r\n            trans_fat,\r\n            caffeine,\r\n            year\r\n        } = this.props.food;\r\n\r\n        return (\r\n           <tr onClick={e => this.goDetailPage({id})}>\r\n               <td>{id}</td>\r\n               <td>{food_group}</td>\r\n               <td>{food_name}</td>\r\n               <td>{size}</td>\r\n               <td>{calorie}</td>\r\n               <td>{carbohydrate}</td>\r\n               <td>{protein}</td>\r\n               <td>{fat}</td>\r\n               <td>{sugars}</td>\r\n               <td>{salt}</td>\r\n               <td>{cholesterol}</td>\r\n               <td>{saturaated_fat}</td>\r\n               <td>{trans_fat}</td>\r\n               <td>{caffeine}</td>\r\n               <td>{year}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nexport default FoodTableRow;","import React, { Component } from 'react';\r\nimport FoodTableRow from './components/FoodTableRow';\r\n\r\nclass Foods extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.timeout =  0;\r\n  }\r\n\r\n  state = {\r\n    foods: [],\r\n    foodName: '',\r\n    selected : false,\r\n    select_id: 1\r\n  };\r\n\r\n  food_name = \"\";\r\n\r\n\r\n  componentDidMount() {\r\n    this.getFoodList(0);\r\n  }\r\n\r\n  getFoodList(page){\r\n    fetch('/svc/foods?page='+page)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      this.setState({ foods: data.foods })\r\n    })\r\n    .catch(console.log)\r\n  }\r\n\r\n  handleChangeFoodName = (e) => {\r\n    var searchText = e.target.value; // this is the search text\r\n    if(this.timeout) clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.searchFoods(searchText);\r\n    }, 200);\r\n  }\r\n\r\n  searchFoods = (foodName) => {\r\n    \r\n    if(foodName){\r\n      fetch('/svc/foods/search?foodName='+foodName)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ foods: data.foods })\r\n      })\r\n      .catch(console.log);\r\n    }else{\r\n      this.getFoodList(0);\r\n    }\r\n  }\r\n\r\n  selectItem = (data) => {\r\n    this.setState({\r\n      select_id : data.id,\r\n      selected : true\r\n    })\r\n    this.props.history.push('/food/update/'+data.id);\r\n  }\r\n\r\n\r\n  triggerChange() {\r\n    console.log(this.state);\r\n    // this.searchFoods(foodName);\r\n  }\r\n\r\n  render() {\r\n\r\n    const list = this.state.foods.map((food)=>(\r\n      <FoodTableRow key={food.food_name} food={food} callbackFunction={this.selectItem} />\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"ui-view\">\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-6\">\r\n              <input type=\"text\" className=\"form-control\" id=\"search_text\" placeholder=\"식품 이름\" onChange={evt => this.handleChangeFoodName(evt)} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Food List\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">식품군</th>\r\n                    <th scope=\"col\">식품이름</th>\r\n                    <th scope=\"col\">1회제공량(g)</th>\r\n                    <th scope=\"col\">칼로리(kcal)</th>\r\n                    <th scope=\"col\">탄수화물(g)</th>\r\n                    <th scope=\"col\">단백질(g)</th>\r\n                    <th scope=\"col\">지방(g)</th>\r\n                    <th scope=\"col\">당류(g)</th>\r\n                    <th scope=\"col\">나트륨(mg)</th>\r\n                    <th scope=\"col\">콜레스톨(mg)</th>\r\n                    <th scope=\"col\">포화지방산(g)</th>\r\n                    <th scope=\"col\">트랜스지방산(g)</th>\r\n                    <th scope=\"col\">카페인(g)</th>\r\n                    <th scope=\"col\">출시연도</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {list}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Foods;\r\n"],"sourceRoot":""}