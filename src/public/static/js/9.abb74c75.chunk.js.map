{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","views/Foods/Create/CreateFoods.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__webpack_require__","d","__webpack_exports__","_objectSpread","_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","CreateFoods","state","food","caffeine","calorie","carbohydrate","cholesterol","fat","food_group","food_name","protein","salt","saturaated_fat","size","sugars","trans_fat","year","handleChange","e","_this","setState","E_git_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","E_git_coreui_free_react_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","name","handleSubmit","preventDefault","console","log","props","match","params","id","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","text","_this2","this","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","htmlFor","type","onChange","onClick","window","confirm","Component"],"mappings":"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","file":"static/js/9.abb74c75.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","\r\nimport React, { Component } from 'react';\r\n\r\nclass CreateFoods extends Component {\r\n    state = {\r\n        food : {\r\n            caffeine: \"0\",\r\n            calorie: \"0\",\r\n            carbohydrate: \"0\",\r\n            cholesterol: \"0\",\r\n            fat: \"0\",\r\n            food_group: \"\",\r\n            food_name: \"\",\r\n            protein: \"0\",\r\n            salt: \"0\",\r\n            saturaated_fat: \"0\",\r\n            size: \"0\",\r\n            sugars: \"0\",\r\n            trans_fat: \"0\",\r\n            year: \"2019\"\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { food } = this.state;\r\n        this.setState({\r\n            food: {\r\n                ...food,\r\n                [e.target.name] : e.target.value\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.food);\r\n        const {food} = this.state;\r\n        const id = this.props.match.params.id;\r\n        fetch('/svc/foods/', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(food)\r\n        })\r\n        .then(res => res.text()) // OR res.json()\r\n        .then(res => console.log(res))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {food} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"exampleFormControlInput1\">식품군</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"food_group\" value={food.food_group} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"exampleFormControlInput2\">식품 이름</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput2\" name=\"food_name\" value={food.food_name} onChange={this.handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput3\">1회 제공량 (g)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput3\" name=\"size\" value={food.size} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput4\">칼로리 (kcal)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput4\" name=\"calorie\" value={food.calorie} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput5\">탄수화물</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput5\" name=\"carbohydrate\" value={food.carbohydrate} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput6\">단백질</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput6\" name=\"protein\" value={food.protein} onChange={this.handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput7\">지방 (g)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput7\" name=\"fat\" value={food.fat} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput8\">당류 (g)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput8\" name=\"sugars\" value={food.sugars} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput9\">나트륨 (mg)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput9\" name=\"salt\" value={food.salt} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput10\">콜레스톨 (mg)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput10\" name=\"cholesterol\" value={food.cholesterol} onChange={this.handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput11\">포화지방산 (g)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput11\" name=\"saturaated_fat\" value={food.saturaated_fat} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput12\">트랜스 지방산(g)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput12\" name=\"trans_fat\" value={food.trans_fat} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput13\">카페인 (mg)</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput13\" name=\"caffeine\" value={food.caffeine} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"exampleFormControlInput14\">출시연도</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput14\" name=\"year\" value={food.year} onChange={this.handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-auto my-1\">\r\n                    <button className=\"btn btn-primary\" onClick={ e => window.confirm(\"업데이트 할꺼냐?\") && this.handleSubmit(e)}>Submit</button>\r\n                </div>\r\n            </div>\r\n        );    \r\n    }\r\n}\r\n\r\nexport default CreateFoods;"],"sourceRoot":""}