{"version":3,"sources":["views/Foods/List/components/FoodTableRow.js","views/Foods/List/Foods.js"],"names":["FoodTableRow","goDetailPage","data","_this2","this","_this$props$food","props","food","id","food_group","food_name","size","calorie","carbohydrate","protein","fat","sugars","salt","cholesterol","saturaated_fat","trans_fat","caffeine","year","react_default","a","createElement","onClick","e","Component","defaultProps","Foods","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","foods","foodName","handleChangeFoodName","searchText","target","value","timeout","clearTimeout","setTimeout","searchFoods","fetch","then","res","json","setState","catch","console","log","getFoodList","page","_this3","list","map","components_FoodTableRow","key","placeholder","onChange","evt","className","scope"],"mappings":"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","file":"static/js/13.258c5bce.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass FoodTableRow extends Component{\r\n \r\n    static defaultProps = {\r\n        food: {\r\n            \"food_group\": \"과자류\",\r\n            \"food_name\": \"100% 유기농 허니팝 키즈퐁\",\r\n            \"size\": \"30\",\r\n            \"calorie\": \"33.3\",\r\n            \"carbohydrate\": \"7.4\",\r\n            \"protein\": \"0.63\",\r\n            \"fat\": \"0\",\r\n            \"sugars\": \"4.2\",\r\n            \"salt\": \"0\",\r\n            \"cholesterol\": \"0\",\r\n            \"saturaated_fat\": \"0\",\r\n            \"trans_fat\": \"0\",\r\n            \"caffeine\": \"0\",\r\n            \"year\": \"2017\"\r\n        }\r\n      }\r\n\r\n    goDetailPage = (data) => {\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const { \r\n            id,\r\n            food_group,\r\n            food_name,\r\n            size,\r\n            calorie,\r\n            carbohydrate,\r\n            protein,\r\n            fat,\r\n            sugars,\r\n            salt,\r\n            cholesterol,\r\n            saturaated_fat,\r\n            trans_fat,\r\n            caffeine,\r\n            year\r\n        } = this.props.food;\r\n\r\n        return (\r\n           <tr onClick={e => this.goDetailPage({id})}>\r\n               <td>{id}</td>\r\n               <td>{food_group}</td>\r\n               <td>{food_name}</td>\r\n               <td>{size}</td>\r\n               <td>{calorie}</td>\r\n               <td>{carbohydrate}</td>\r\n               <td>{protein}</td>\r\n               <td>{fat}</td>\r\n               <td>{sugars}</td>\r\n               <td>{salt}</td>\r\n               <td>{cholesterol}</td>\r\n               <td>{saturaated_fat}</td>\r\n               <td>{trans_fat}</td>\r\n               <td>{caffeine}</td>\r\n               <td>{year}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nexport default FoodTableRow;","import React, { Component } from 'react';\r\nimport FoodTableRow from './components/FoodTableRow';\r\n\r\nclass Foods extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.timeout =  0;\r\n  }\r\n\r\n  state = {\r\n    foods: [],\r\n    foodName: ''\r\n  };\r\n\r\n  food_name = \"\";\r\n\r\n\r\n  componentDidMount() {\r\n    this.getFoodList(0);\r\n  }\r\n\r\n  getFoodList(page){\r\n    fetch('/svc/foods?page='+page)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      this.setState({ foods: data.foods })\r\n    })\r\n    .catch(console.log)\r\n  }\r\n\r\n  handleChangeFoodName = (e) => {\r\n    var searchText = e.target.value; // this is the search text\r\n    if(this.timeout) clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.searchFoods(searchText);\r\n    }, 200);\r\n  }\r\n\r\n  searchFoods = (foodName) => {\r\n    \r\n    if(foodName){\r\n      fetch('/svc/foods/search?foodName='+foodName)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ foods: data.foods })\r\n      })\r\n      .catch(console.log);\r\n    }else{\r\n      this.getFoodList(0);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  triggerChange() {\r\n    console.log(this.state);\r\n    // this.searchFoods(foodName);\r\n  }\r\n\r\n  render() {\r\n\r\n    const list = this.state.foods.map((food)=>(\r\n      <FoodTableRow key={food.food_name} food={food}/>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"ui-view\">\r\n          <input\r\n            placeholder=\"식품 이름\"\r\n            onChange={evt => this.handleChangeFoodName(evt)}\r\n          />\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Food List\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">식품군</th>\r\n                    <th scope=\"col\">식품이름</th>\r\n                    <th scope=\"col\">1회제공량(g)</th>\r\n                    <th scope=\"col\">칼로리(kcal)</th>\r\n                    <th scope=\"col\">탄수화물(g)</th>\r\n                    <th scope=\"col\">단백질(g)</th>\r\n                    <th scope=\"col\">지방(g)</th>\r\n                    <th scope=\"col\">당류(g)</th>\r\n                    <th scope=\"col\">나트륨(mg)</th>\r\n                    <th scope=\"col\">콜레스톨(mg)</th>\r\n                    <th scope=\"col\">포화지방산(g)</th>\r\n                    <th scope=\"col\">트랜스지방산(g)</th>\r\n                    <th scope=\"col\">카페인(g)</th>\r\n                    <th scope=\"col\">출시연도</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {list}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Foods;\r\n"],"sourceRoot":""}