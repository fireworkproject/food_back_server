{"version":3,"sources":["views/Foods/List/components/FoodTableRow.js","views/Foods/List/Foods.js"],"names":["FoodTableRow","_this$props$food","this","props","food","id","food_group","food_name","size","calorie","carbohydrate","protein","fat","sugars","salt","cholesterol","saturaated_fat","trans_fat","caffeine","year","react_default","a","createElement","Component","defaultProps","Foods","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","foods","foodName","handleChangeFoodName","e","searchText","target","value","timeout","clearTimeout","setTimeout","searchFoods","fetch","then","res","json","data","setState","catch","console","log","getFoodList","page","_this2","_this3","list","map","components_FoodTableRow","key","placeholder","onChange","evt","className","scope"],"mappings":"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","file":"static/js/15.b3a524fa.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass FoodTableRow extends Component{\r\n    static defaultProps = {\r\n        food: {\r\n            \"food_group\": \"과자류\",\r\n            \"food_name\": \"100% 유기농 허니팝 키즈퐁\",\r\n            \"size\": \"30\",\r\n            \"calorie\": \"33.3\",\r\n            \"carbohydrate\": \"7.4\",\r\n            \"protein\": \"0.63\",\r\n            \"fat\": \"0\",\r\n            \"sugars\": \"4.2\",\r\n            \"salt\": \"0\",\r\n            \"cholesterol\": \"0\",\r\n            \"saturaated_fat\": \"0\",\r\n            \"trans_fat\": \"0\",\r\n            \"caffeine\": \"0\",\r\n            \"year\": \"2017\"\r\n        }\r\n      }\r\n    render(){\r\n\r\n        const { \r\n            id,\r\n            food_group,\r\n            food_name,\r\n            size,\r\n            calorie,\r\n            carbohydrate,\r\n            protein,\r\n            fat,\r\n            sugars,\r\n            salt,\r\n            cholesterol,\r\n            saturaated_fat,\r\n            trans_fat,\r\n            caffeine,\r\n            year\r\n        } = this.props.food;\r\n\r\n        return (\r\n           <tr>\r\n               <td>{id}</td>\r\n               <td>{food_group}</td>\r\n               <td>{food_name}</td>\r\n               <td>{size}</td>\r\n               <td>{calorie}</td>\r\n               <td>{carbohydrate}</td>\r\n               <td>{protein}</td>\r\n               <td>{fat}</td>\r\n               <td>{sugars}</td>\r\n               <td>{salt}</td>\r\n               <td>{cholesterol}</td>\r\n               <td>{saturaated_fat}</td>\r\n               <td>{trans_fat}</td>\r\n               <td>{caffeine}</td>\r\n               <td>{year}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nexport default FoodTableRow;","import React, { Component } from 'react';\r\nimport FoodTableRow from './components/FoodTableRow';\r\n\r\nclass Foods extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.timeout =  0;\r\n  }\r\n\r\n  state = {\r\n    foods: [],\r\n    foodName: ''\r\n  };\r\n\r\n  food_name = \"\";\r\n\r\n\r\n  componentDidMount() {\r\n    this.getFoodList(0);\r\n  }\r\n\r\n  getFoodList(page){\r\n    fetch('/svc/foods?page='+page)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      this.setState({ foods: data.foods })\r\n    })\r\n    .catch(console.log)\r\n  }\r\n\r\n  handleChangeFoodName = (e) => {\r\n    var searchText = e.target.value; // this is the search text\r\n    if(this.timeout) clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.searchFoods(searchText);\r\n    }, 200);\r\n  }\r\n\r\n  searchFoods = (foodName) => {\r\n    \r\n    if(foodName){\r\n      fetch('/svc/foods/search?foodName='+foodName)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ foods: data.foods })\r\n      })\r\n      .catch(console.log);\r\n    }else{\r\n      this.getFoodList(0);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  triggerChange() {\r\n    console.log(this.state);\r\n    // this.searchFoods(foodName);\r\n  }\r\n\r\n  render() {\r\n\r\n    const list = this.state.foods.map((food)=>(\r\n      <FoodTableRow key={food.food_name} food={food}/>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"ui-view\">\r\n          <input\r\n            placeholder=\"식품 이름\"\r\n            onChange={evt => this.handleChangeFoodName(evt)}\r\n          />\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Food List\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">식품군</th>\r\n                    <th scope=\"col\">식품이름</th>\r\n                    <th scope=\"col\">1회제공량(g)</th>\r\n                    <th scope=\"col\">칼로리(kcal)</th>\r\n                    <th scope=\"col\">탄수화물(g)</th>\r\n                    <th scope=\"col\">단백질(g)</th>\r\n                    <th scope=\"col\">지방(g)</th>\r\n                    <th scope=\"col\">당류(g)</th>\r\n                    <th scope=\"col\">나트륨(mg)</th>\r\n                    <th scope=\"col\">콜레스톨(mg)</th>\r\n                    <th scope=\"col\">포화지방산(g)</th>\r\n                    <th scope=\"col\">트랜스지방산(g)</th>\r\n                    <th scope=\"col\">카페인(g)</th>\r\n                    <th scope=\"col\">출시연도</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {list}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Foods;\r\n"],"sourceRoot":""}